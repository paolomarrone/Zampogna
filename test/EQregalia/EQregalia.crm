pi = 3.14159265358979323846

y = EQregalia(x, low, med, high) {
	# the controls are ranged between 0 and 1 and they 
	# need to be mapped in a [-20; 20] decibel range
	decibel_range = 40
	lowdb = low * decibel_range - decibel_range/2
	meddb = med * decibel_range - decibel_range/2
	highdb = high * decibel_range - decibel_range/2

	t1 = lowshelffilter(x, lowdb)
	
	t2 = highshelffilter(t1, meddb)

	t3 = peakfilter(t2, highdb)

	y = t3
}

yL, yR = EQregaliaStereo(xL, xR, low, med, high) {
	
	yL = EQregalia (xL, low, med, high)
	yR = EQregalia (xR, low, med, high)
}

y = lowshelffilter(x, gain) {
	K = K_approximation(gain)
	f0 = 200
	z = (pi*f0)/fs

	a = (z - 1) / (z + 1)

	u = ((K - 1 ) / 2) * (a * x + delay1(x)) -  a * delay1(u)
	@u = 0

	y = ((K + 1) / 2) * x + u
}


y = highshelffilter(x, gain) {
	K = K_approximation(gain)
	f0 = 5000
	z = (pi*f0)/fs

	a = (z - 1) / (z + 1)

	u = ((1 - K) / 2) * (a * x + delay1(x)) -  a * delay1(u)
	@u = 0

	y = ((1 + K) / 2) * x + u
}


y = peakfilter(x, gain) {
	K = K_approximation(gain)
	f0 = 1000
	deltaf = 1789
	z = (2 * pi * f0) / fs

	b = - (-0.4643843937958486 * z * z - 0.01348369482970019 * z + 1.000898384794433)
	a = (1 - ((pi * deltaf) / fs)) / (1 + ((pi * deltaf) / fs))

	u = ((1 - K) / 2) * (a * x + b * (1 + a) * delay1(x) + delay1(delay1(x))) ...
	    - b * (1 + a) * delay1(u) - a * delay1(delay1(u))
	@u = 0

	y = ((1 + K) / 2) * x + u
}


y = K_approximation(gain) {

	K = 1.005216266655582 + gain * ...
	(0.115446211868609400 + gain * ...
	(0.006357962473527189 + gain * ...
	(2.473043497433871e-4 + gain * ...
	(9.275409030059003e-6 + gain * ...
	(2.061300092186973e-7)))))
	
	y = K
}
